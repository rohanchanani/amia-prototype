maxText = paste("More total", absolute_units[metric], "of",metric,"relative to whole population within the",dimension)
meanY=(max(allVals) + min(allVals)) / 2
arrowX = textX - 0.5
nudge = allVals %>% sapply(abs) %>% mean() / 8
mini_nudge = nudge / 2
return(ggplot(graphData, aes(fill=!!as.symbol(determinant), y=!!as.symbol(metric), x=!!as.symbol(dimension)))
+ geom_bar(position=position_dodge(0.75), width=0.75, stat="identity")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(position=position_dodge(width=0.75),aes(y=!!as.symbol(metric)+sign(!!as.symbol(metric))*nudge - mini_nudge,fill=!!as.symbol(determinant),label=signif(!!as.symbol(metric), digits=2),hjust=0))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
groupedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston")
groupedActual <- function(dimension, determinant, metric, setting, campus) {
rawData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[1], check.names = FALSE)
graphData <- data.frame(graphDim=character(), graphDet=character(), graphMet=numeric())
names(graphData)[1] <- dimension
names(graphData)[2] <- determinant
names(graphData)[3] <- metric
dims <- rawData %>% pull(!!as.symbol(dimension))
dets <- rawData %>% colnames()
dimsList <- c()
detsList <- c()
for (dim in 1:length(dims)) {
dimsList[dims[dim]] <- dim
}
for (det in 1:length(dets)) {
detsList[dets[det]] <- det
}
counter = 1
allVals <- c()
for (row in 1:nrow(rawData)) {
for (col in 2:ncol(rawData)) {
graphData[counter,] <- list(dims[row], dets[col], rawData[row,col])
allVals[counter] <- rawData[row,col]
counter = counter+1
}
}
title <- toTitleCase(paste("Average",average_units[metric],"by",dimension,"and",determinant))
nudge = allVals %>% sapply(abs) %>% mean() / 8
mini_nudge = nudge / 2
return(ggplot(graphData, aes(fill=!!as.symbol(determinant), y=!!as.symbol(metric), x=!!as.symbol(dimension)))
+ geom_bar(position=position_dodge(0.75), width=0.75, stat="identity")
+ coord_flip(clip="off")
+ geom_text(position=position_dodge(width=0.75),aes(y=!!as.symbol(metric)+sign(!!as.symbol(metric))*nudge - mini_nudge,fill=!!as.symbol(determinant),label=signif(!!as.symbol(metric), digits=2),hjust=0))
+ ggtitle(title)
+ labs(x=dimension, y=paste("Average",absolute_units[metric])))
}
groupedActual("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston")
groupedActual <- function(dimension, determinant, metric, setting, campus) {
rawData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[1], check.names = FALSE)
graphData <- data.frame(graphDim=character(), graphDet=character(), graphMet=numeric())
names(graphData)[1] <- dimension
names(graphData)[2] <- determinant
names(graphData)[3] <- metric
dims <- rawData %>% pull(!!as.symbol(dimension))
dets <- rawData %>% colnames()
dimsList <- c()
detsList <- c()
for (dim in 1:length(dims)) {
dimsList[dims[dim]] <- dim
}
for (det in 1:length(dets)) {
detsList[dets[det]] <- det
}
counter = 1
allVals <- c()
for (row in 1:nrow(rawData)) {
for (col in 2:ncol(rawData)) {
graphData[counter,] <- list(dims[row], dets[col], rawData[row,col])
allVals[counter] <- rawData[row,col]
counter = counter+1
}
}
title <- toTitleCase(paste("Average",average_units[metric],"by",dimension,"and",determinant))
nudge = allVals %>% sapply(abs) %>% mean() / 8
mini_nudge = nudge / 2
return(ggplot(graphData, aes(fill=!!as.symbol(determinant), y=!!as.symbol(metric), x=!!as.symbol(dimension)))
+ geom_bar(position=position_dodge(0.75), width=0.75, stat="identity")
+ coord_flip(clip="off")
+ geom_text(position=position_dodge(width=0.75),aes(y=!!as.symbol(metric)+sign(!!as.symbol(metric))*nudge - mini_nudge,fill=!!as.symbol(determinant),label=signif(!!as.symbol(metric), digits=2),hjust=0))
+ ggtitle(title)
+ labs(x=dimension, y=paste("Average",average_units[metric])))
}
groupedActual("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston")
groupedActual <- function(dimension, determinant, metric, setting, campus) {
rawData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[1], check.names = FALSE)
graphData <- data.frame(graphDim=character(), graphDet=character(), graphMet=numeric())
names(graphData)[1] <- dimension
names(graphData)[2] <- determinant
names(graphData)[3] <- metric
dims <- rawData %>% pull(!!as.symbol(dimension))
dets <- rawData %>% colnames()
dimsList <- c()
detsList <- c()
for (dim in 1:length(dims)) {
dimsList[dims[dim]] <- dim
}
for (det in 1:length(dets)) {
detsList[dets[det]] <- det
}
counter = 1
allVals <- c()
for (row in 1:nrow(rawData)) {
for (col in 2:ncol(rawData)) {
graphData[counter,] <- list(dims[row], dets[col], rawData[row,col])
allVals[counter] <- rawData[row,col]
counter = counter+1
}
}
title <- toTitleCase(paste(metric,"by",dimension,"and",determinant))
nudge = allVals %>% sapply(abs) %>% mean() / 8
mini_nudge = nudge / 2
return(ggplot(graphData, aes(fill=!!as.symbol(determinant), y=!!as.symbol(metric), x=!!as.symbol(dimension)))
+ geom_bar(position=position_dodge(0.75), width=0.75, stat="identity")
+ coord_flip(clip="off")
+ geom_text(position=position_dodge(width=0.75),aes(y=!!as.symbol(metric)+sign(!!as.symbol(metric))*nudge - mini_nudge,fill=!!as.symbol(determinant),label=signif(!!as.symbol(metric), digits=2),hjust=0))
+ ggtitle(title)
+ labs(x=dimension, y=paste("Average",average_units[metric])))
}
groupedActual("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston")
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",metric,"to be the same across",paste(determinant,".",sep=""),"The graph above shows the difference between the actual cumulative",metric, "for",target,"visits and the equitable cumulative",metric, "for each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedRelative <- function(dimension, determinant, metric, setting, campus, target, index=5) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Ratio"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual / Equitable*",metric,"across all",target,"visits in each",dimension))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the ratio between the actual average",average_units[metric], "for",target,"visits and the equitable average",average_units[metric], "for each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 1.")
targetValues = rawData %>% pull(Ratio)
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Ratio), y=Ratio))
+ geom_bar(stat="identity")
+ coord_flip(clip="off")
+ geom_text(aes(y=Ratio + nudge*sign(Ratio),label = signif(Ratio, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedRelative("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the difference between the actual cumulative",metric, "for",target,"visits and the equitable cumulative",metric, "for each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the difference between the actual cumulative",metric, "in",absolute_units[metric], "for",target,"visits and the equitable cumulative",metric,"in",absolute_units[metric], "for each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the cumulative difference between the actual",metric, "in total",absolute_units[metric], "for",target,"visits and the equitable",metric,"in total",absolute_units[metric], "for each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the cumulative difference between the actual",metric, "in total",absolute_units[metric], "and the equitable",metric,"in total",absolute_units[metric], "for",target,"visits in each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the cumulative difference in",absolute_units[metric], "between the actual",metric, "and the equitable",metric, "for",target,"visits in each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
isolatedBar <- function(dimension, determinant, metric, setting, campus, target, index=4) {
initialData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[index], check.names = FALSE)
initialValues <- initialData %>% pull(!!as.symbol(names(initialData)[1])) %>% remove_attributes("names")
rawData <- data.frame(initialValues)
names(rawData)[1] <-  names(initialData)[1]
rawData["Difference"] <- initialData %>% pull(!!as.symbol(target)) %>% remove_attributes("names")
title <- toTitleCase(paste("Discrepancy in total",metric,"for patients with",determinant,"of",target,"by",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*",metric,"in",absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all",target,"visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the cumulative difference in",absolute_units[metric], "between the actual",metric, "and the equitable",metric, "for all",target,"visits in each",paste(dimension,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"the bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
targetValues = rawData %>% pull(Difference)
textY1 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.2
textY2 = min(targetValues) + (max(targetValues) - min(targetValues)) * 0.8
arrowOffset = (max(targetValues) - min(targetValues)) / 16
arrowLength = (max(targetValues) - min(targetValues)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "in", target, "visits relative to whole population within the",dimension)
meanY=(max(targetValues) + min(targetValues)) / 2
arrowX = textX - 0.5
nudge = targetValues %>% sapply(abs) %>% mean() / 15
return(ggplot(data=rawData, aes(x=reorder(!!as.symbol(dimension), Difference), y=Difference))
+ geom_bar(stat="identity") + annotate("text", x=textX+0.25, y=0, label="")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(aes(y=Difference + nudge*sign(Difference),label = signif(Difference, digits=2)))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
isolatedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston", "Medicaid")
groupedBar <- function(dimension, determinant, metric, setting, campus) {
rawData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[4], check.names = FALSE)
graphData <- data.frame(graphDim=character(), graphDet=character(), graphMet=numeric())
names(graphData)[1] <- dimension
names(graphData)[2] <- determinant
names(graphData)[3] <- metric
dims <- rawData %>% pull(!!as.symbol(dimension))
dets <- rawData %>% colnames()
dimsList <- c()
detsList <- c()
for (dim in 1:length(dims)) {
dimsList[dims[dim]] <- dim
}
for (det in 1:length(dets)) {
detsList[dets[det]] <- det
}
counter = 1
allVals <- c()
for (row in 1:nrow(rawData)) {
for (col in 2:ncol(rawData)) {
graphData[counter,] <- list(dims[row], dets[col], rawData[row,col])
allVals[counter] <- rawData[row,col]
counter = counter+1
}
}
title <- toTitleCase(paste("Discrepancy in Total",metric,"by",determinant,"and",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*","Total",metric,"in", absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the cumulative difference in",absolute_units[metric], "between the actual",metric, "and the equitable",metric,"for all visits in each",dimension,"by",paste(determinant,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"each bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
textY1 = min(allVals) + (max(allVals) - min(allVals)) * 0.2
textY2 = min(allVals) + (max(allVals) - min(allVals)) * 0.8
arrowOffset = (max(allVals) - min(allVals)) / 16
arrowLength = (max(allVals) - min(allVals)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "of",metric,"relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "of",metric,"relative to whole population within the",dimension)
meanY=(max(allVals) + min(allVals)) / 2
arrowX = textX - 0.5
nudge = allVals %>% sapply(abs) %>% mean() / 8
mini_nudge = nudge / 2
return(ggplot(graphData, aes(fill=!!as.symbol(determinant), y=!!as.symbol(metric), x=!!as.symbol(dimension)))
+ geom_bar(position=position_dodge(0.75), width=0.75, stat="identity")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(position=position_dodge(width=0.75),aes(y=!!as.symbol(metric)+sign(!!as.symbol(metric))*nudge - mini_nudge,fill=!!as.symbol(determinant),label=signif(!!as.symbol(metric), digits=2),hjust=0))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
groupedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston")
groupedBar <- function(dimension, determinant, metric, setting, campus) {
rawData <- data.frame(createTables(dimension, determinant, metric, setting, campus)[4], check.names = FALSE)
graphData <- data.frame(graphDim=character(), graphDet=character(), graphMet=numeric())
names(graphData)[1] <- dimension
names(graphData)[2] <- determinant
names(graphData)[3] <- metric
dims <- rawData %>% pull(!!as.symbol(dimension))
dets <- rawData %>% colnames()
dimsList <- c()
detsList <- c()
for (dim in 1:length(dims)) {
dimsList[dims[dim]] <- dim
}
for (det in 1:length(dets)) {
detsList[dets[det]] <- det
}
counter = 1
allVals <- c()
for (row in 1:nrow(rawData)) {
for (col in 2:ncol(rawData)) {
graphData[counter,] <- list(dims[row], dets[col], rawData[row,col])
allVals[counter] <- rawData[row,col]
counter = counter+1
}
}
title <- toTitleCase(paste("Discrepancy in total",metric,"by",determinant,"and",dimension))
yLabel1 <- toTitleCase(paste("Actual - Equitable*","Total",metric,"in", absolute_units[metric],"(Total cumulative",absolute_units[metric],"across all visits in each",paste(dimension,")",sep="")))
yLabel2 <- paste("*In an equitable system, we would expect the average",average_units[metric],"to be the same across",paste(determinant,".",sep=""),"The graph above shows the cumulative difference in",absolute_units[metric], "between the actual",metric, "and the equitable",metric,"for all visits in each",dimension,"by",paste(determinant,".",sep=""),"In a perfectly equitable",paste(dimension,",",sep=""),"each bar would be at 0.")
textX = 1.5 + rawData %>% pull(!!as.symbol(dimension)) %>% length()
textY1 = min(allVals) + (max(allVals) - min(allVals)) * 0.2
textY2 = min(allVals) + (max(allVals) - min(allVals)) * 0.8
arrowOffset = (max(allVals) - min(allVals)) / 16
arrowLength = (max(allVals) - min(allVals)) * 3 / 8
minText = paste("Fewer total", absolute_units[metric], "of",metric,"relative to whole population within the",dimension)
maxText = paste("More total", absolute_units[metric], "of",metric,"relative to whole population within the",dimension)
meanY=(max(allVals) + min(allVals)) / 2
arrowX = textX - 0.5
nudge = allVals %>% sapply(abs) %>% mean() / 8
mini_nudge = nudge / 2
return(ggplot(graphData, aes(fill=!!as.symbol(determinant), y=!!as.symbol(metric), x=!!as.symbol(dimension)))
+ geom_bar(position=position_dodge(0.75), width=0.75, stat="identity")
+ annotate("text", x=textX+0.5, y=textY1, label="")
+ annotate("text", x=textX, y=textY1, label=str_wrap(minText, width=60))
+ annotate("text", x=textX, y=textY2, label=str_wrap(maxText, width=60))
+ geom_segment(aes(x=arrowX,y=meanY+arrowOffset,xend=arrowX,yend=meanY+arrowOffset+arrowLength),arrow=arrow())
+ geom_segment(aes(x=arrowX,y=meanY-arrowOffset,xend=arrowX,yend=meanY-arrowOffset-arrowLength),arrow=arrow())
+ coord_flip(clip="off")
+ geom_text(position=position_dodge(width=0.75),aes(y=!!as.symbol(metric)+sign(!!as.symbol(metric))*nudge - mini_nudge,fill=!!as.symbol(determinant),label=signif(!!as.symbol(metric), digits=2),hjust=0))
+ ggtitle(title)
+ labs(x=dimension, y=paste(yLabel1,str_wrap(yLabel2, width=120),sep="\n\n")))
}
groupedBar("Zip Code", "Insurance", "Length of Stay", "ED", "Egleston")
shiny::runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp()
runApp('amia-prototype')
runApp('amia-prototype')
